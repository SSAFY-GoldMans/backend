tasks.named('bootJar') {
    enabled = true
}

tasks.named('jar') {
    enabled = false
}

dependencies {
    implementation project(':goldmen-common')

    /* DATABASE */
    testRuntimeOnly('com.h2database:h2')
    runtimeOnly('com.mysql:mysql-connector-j')

    /* JPA + VALID */
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-validation')

    /* Querydsl */
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

/* Querydsl Start */
def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}
/* Querydsl End */